name: Flatpak bundle

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build app bundle
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/bundle')
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - uses: actions/checkout@v5
        with:
          ref: ''
          
      - uses: taiki-e/install-action@just

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder ostree

      - name: Install flatpak SDKs
        run: just flatpak-install-sdk

      - name: Generate manifest
        run: |
          just flatpak-install-flatpak-builder-tools
          just flatpak-gen-manifest

      - name: Build app
        run: |
          flatpak-builder \
              --verbose \
              --ccache \
              --repo=repo \
              --default-branch=testing \
              --user \
              flatpak-out \
              io.github.cosmic_utils.cosmic-ext-applet-clipboard-manager.json

      - name: Create Flatpak bundle
        run: |
          flatpak build-bundle \
            repo \
            clipboard-manager.flatpak \
            io.github.cosmic_utils.cosmic-ext-applet-clipboard-manager \
            testing

      - name: Upload Flatpak bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: clipboard-manager-bundle
          path: clipboard-manager.flatpak
          if-no-files-found: error

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
